{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { Button, Menu } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { off, on } from \"../utils/events\";\n\nfunction Sidebar(_ref) {\n  var jobs = _ref.jobs,\n      job = _ref.job,\n      onSelect = _ref.onSelect,\n      onCreate = _ref.onCreate;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var select = function select(_ref2) {\n    var key = _ref2.key;\n    setSelected([key]);\n    var job = jobs.find(function (j) {\n      return j.key === key;\n    });\n    onSelect(job);\n  };\n\n  var reset = function reset() {\n    setSelected([]);\n  };\n\n  var updated = function updated(_ref3) {\n    var detail = _ref3.detail;\n    setSelected([detail.key]);\n  };\n\n  useEffect(function () {\n    if (job) {\n      setSelected([job.key]);\n    } else {\n      setSelected([]);\n    } // on('new-job', reset)\n    // on('updated', updated)\n\n\n    return function () {// off('new-job', reset)\n      // off('updated', updated)\n    };\n  }, [job]);\n  return /*#__PURE__*/React.createElement(Menu, {\n    onClick: select,\n    mode: \"inline\",\n    selectedKeys: selected,\n    className: \"h-screen overflow-x-hidden overflow-y-auto\"\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"ant-menu-item ant-menu-item-only-child\",\n    role: \"menuitem\",\n    style: {\n      paddingLeft: 24,\n      height: 60\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\"\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onCreate,\n    type: \"primary\",\n    className: \"w-full\"\n  }, \"Create Job\"))), jobs.map(function (job) {\n    return /*#__PURE__*/React.createElement(Menu.Item, {\n      key: job.key\n    }, job.name);\n  }));\n}\n\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}