{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { message, Modal } from 'antd';\nimport Placeholder from '../components/Placeholder';\nimport Sidebar from '../components/Sidebar';\nimport Editor from '../components/Editor';\nimport { placeholder } from \"../utils/helpers\";\nimport { fire } from \"../utils/events\";\n\nfunction App({\n  initialJobs\n}) {\n  const {\n    0: jobs,\n    1: setJobs\n  } = useState(initialJobs);\n  const {\n    0: job,\n    1: setJob\n  } = useState(null);\n\n  const connect = async (selected = null) => {\n    const res = await fetch('http://localhost:3000/api/get');\n    const js = await res.json();\n    setJobs(js);\n  };\n\n  const onCreate = () => {\n    if (job && !job.key) {\n      return 'already an unsaved job.';\n    }\n\n    fire('new-job');\n    const b = placeholder();\n    return setJob(b);\n  };\n\n  const onCancel = async () => {\n    message.success('Changes cancelled.');\n    setJob(null);\n    const res = await fetch('http://localhost:3000/api/refresh');\n    const js = await res.json();\n    setJobs(js);\n  };\n\n  const onSave = async (j, payload) => {\n    const data = {\n      key: j.key,\n      command: payload.command,\n      comment: payload.name,\n      interval: [payload.minute, payload.hour, payload.day, payload.month, payload.weekday].join(' ')\n    };\n    const res = await fetch('http://localhost:3000/api/save', {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n    const {\n      job,\n      jobs,\n      error\n    } = await res.json();\n\n    if (error) {\n      return message.error(error);\n    }\n\n    setJobs(jobs);\n    setJob(job);\n    return message.success(`${job.name} saved.`);\n  };\n\n  const onDelete = j => {\n    Modal.confirm({\n      title: j.name,\n      content: `Are you sure you want to delete this job?`,\n      onOk: async () => {\n        const res = await fetch('http://localhost:3000/api/delete', {\n          method: 'POST',\n          body: j.key\n        });\n        const jobs = await res.json();\n        setJobs(jobs);\n        setJob(null);\n        message.error(`${j.name} deleted.`);\n      }\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"flex flex-wrap min-h-screen\"\n  }, __jsx(\"nav\", {\n    className: \"w-1/4\"\n  }, __jsx(Sidebar, {\n    onCreate: onCreate,\n    jobs: jobs,\n    job: job,\n    onSelect: setJob\n  })), __jsx(\"div\", {\n    className: \"w-3/4\"\n  }, job ? __jsx(Editor, {\n    onCancel: onCancel,\n    onSave: onSave,\n    onDelete: onDelete,\n    job: job\n  }) : __jsx(Placeholder, {\n    onCreate: onCreate\n  }))));\n}\n\nexport const getServerSideProps = async () => {\n  try {\n    const res = await fetch('http://localhost:3000/api/refresh');\n    return {\n      props: {\n        initialJobs: await res.json()\n      }\n    };\n  } catch (error) {\n    return {\n      props: {\n        initialJobs: []\n      }\n    };\n  }\n};\nexport default App;","map":null,"metadata":{},"sourceType":"module"}