{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { v4 } from \"uuid\";\nexport var endpoint = function endpoint(path) {\n  return \"\".concat(window.location.origin, \"/api/\").concat(path);\n};\nexport var waitFor = function waitFor(seconds) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, seconds * 1000);\n  });\n};\nexport var asyncForEach = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(array, callback) {\n    var index;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            index = 0;\n\n          case 1:\n            if (!(index < array.length)) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.next = 4;\n            return callback(array[index], index, array);\n\n          case 4:\n            index++;\n            _context.next = 1;\n            break;\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function asyncForEach(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var emojiUrl = function emojiUrl(emoji) {\n  // Create a canvas element\n  var canvas = document.createElement('canvas');\n  canvas.height = 64;\n  canvas.width = 64; // Get the canvas context\n\n  var context = canvas.getContext('2d');\n  context.font = '64px serif';\n  context.fillText(emoji, 0, 64); // Get the custom URL\n\n  return canvas.toDataURL();\n};\nexport var buildJob = function buildJob(job, key) {\n  return {\n    job: job,\n    key: key,\n    name: job.comment() || job.render()\n  };\n};\nexport var serialiseJob = function serialiseJob(job) {\n  return {\n    key: job.key,\n    name: job.name,\n    job: {\n      comment: job.job.comment(),\n      command: job.job.command(),\n      minute: job.job.minute().toString(),\n      hour: job.job.hour().toString(),\n      dom: job.job.dom().toString(),\n      month: job.job.month().toString(),\n      dow: job.job.dow().toString()\n    }\n  };\n};\nexport var placeholder = function placeholder() {\n  return {\n    \"key\": v4(),\n    \"name\": \"hello world\",\n    \"job\": {\n      \"comment\": \"hello world\",\n      \"command\": \"echo 'hello world'\",\n      \"minute\": \"*\",\n      \"hour\": \"*\",\n      \"dom\": \"*\",\n      \"month\": \"*\",\n      \"dow\": \"*\"\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}